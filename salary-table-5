<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>공무원 연봉 종합표 (10, 15, 20호봉)</title>
  <script src="https://cdn.tailwindcss.com"></script>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body class="bg-gray-50 min-h-screen p-8 ml-48">
  <!-- 왼쪽 고정 사이드 메뉴 -->
  <nav class="fixed top-0 left-0 h-full w-48 bg-white shadow-lg flex flex-col items-start pt-10 z-40">
    <a href="google60cae4bef7e613f8.html" target="_self" class="w-full px-6 py-3 text-blue-700 font-bold hover:bg-blue-50 transition">공무원 연봉 계산기</a>
    <a href="salary-table.html" target="_self" class="w-full px-6 py-3 text-blue-700 font-bold hover:bg-blue-50 transition">연봉 총합표 (9급)</a>
    <a href="salary-table-7.html" target="_self" class="w-full px-6 py-3 text-blue-700 font-bold hover:bg-blue-50 transition">연봉 총합표 (7급)</a>
    <a href="salary-table-5.html" target="_self" class="w-full px-6 py-3 text-blue-700 font-bold hover:bg-blue-50 transition">연봉 총합표 (5급)</a>
    <!-- 추후 다른 메뉴 추가 가능 -->
  </nav>
  <div class="max-w-4xl mx-auto bg-white rounded-2xl shadow-lg p-8">
    <h1 class="text-3xl font-bold text-blue-800 mb-2 text-center">공무원 연봉 종합표<br><span class="text-base text-gray-500">(10, 15, 20호봉 기준)</span></h1>
    <p class="text-center text-sm text-gray-500 mb-6">※ 5급 출신 기준, 가족수당·성과급·대우수당 제외, 최소 실질 연봉입니다.</p>
    <div class="overflow-x-auto mb-8">
      <table class="min-w-full text-center border border-blue-200 rounded-xl">
        <thead class="bg-blue-100">
          <tr>
            <th class="px-4 py-2">급수</th>
            <th class="px-4 py-2">10호봉 연봉</th>
            <th class="px-4 py-2">15호봉 연봉</th>
            <th class="px-4 py-2">20호봉 연봉</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-blue-50" id="salary-table-body">
        </tbody>
      </table>
    </div>
    <h2 class="text-xl font-semibold text-gray-700 mb-2 mt-8">급수별 연봉(만원) 시각화</h2>
    <canvas id="salaryChart" height="120"></canvas>
  </div>
  <!-- 개인정보처리방침 버튼 -->
  <button id="privacyBtn" class="fixed right-6 top-6 z-50 bg-blue-600 text-white px-4 py-2 rounded-full shadow-lg hover:bg-blue-700 transition">
    개인정보처리방침
  </button>
  <!-- 개인정보처리방침 모달 -->
  <div id="privacyModal" class="fixed inset-0 bg-black bg-opacity-40 flex items-center justify-center z-50 hidden">
    <div class="bg-white rounded-2xl shadow-xl max-w-3xl w-full p-8 relative overflow-y-auto max-h-[90vh]">
      <button id="closeModal" class="absolute top-4 right-4 text-gray-400 hover:text-gray-700 text-2xl font-bold">&times;</button>
      <h1 class="text-3xl font-bold mb-4">개인정보처리방침</h1>
      <p class="mb-4">본 사이트(<strong>ockdo.github.io</strong>)는 Google AdSense를 포함한 제3자 광고 서비스를 이용하고 있습니다. 아래는 Google AdSense 정책에 부합하는 개인정보처리방침입니다.</p>
      <h2 class="text-2xl font-semibold mt-6 mb-2">■ 수집하는 개인정보 항목</h2>
      <ul class="list-disc pl-6 mb-4">
        <li>쿠키(Cookie) 및 유사 기술을 통한 정보</li>
        <li>IP 주소, 브라우저 종류, 방문 일시, 방문한 페이지 등 비식별 정보</li>
      </ul>
      <h2 class="text-2xl font-semibold mt-6 mb-2">■ 개인정보의 수집 및 이용 목적</h2>
      <ul class="list-disc pl-6 mb-4">
        <li>맞춤형 광고 제공 및 광고 성과 측정</li>
        <li>웹사이트 트래픽 분석 및 서비스 개선</li>
      </ul>
      <h2 class="text-2xl font-semibold mt-6 mb-2">■ Google 및 제3자 광고 제공자의 정보 활용</h2>
      <p class="mb-4">Google 등 제3자 광고 제공업체는 사용자의 이전 방문 기록을 바탕으로 맞춤 광고를 제공합니다. 이를 위해 쿠키 또는 모바일 광고 식별자와 같은 기술이 사용될 수 있습니다.</p>
      <ul class="list-disc pl-6 mb-4">
        <li>Google은 DoubleClick 쿠키를 사용하여 사용자가 본 사이트 및 다른 사이트를 방문할 때 맞춤 광고를 제공합니다.</li>
        <li>사용자는 <a class="text-blue-600 underline" href="https://adssettings.google.com/authenticated" target="_blank">Google 광고 설정</a>에서 맞춤 광고를 비활성화할 수 있습니다.</li>
        <li>또한 <a class="text-blue-600 underline" href="https://optout.aboutads.info" target="_blank">AboutAds</a>에서 일부 제3자 광고 제공자의 맞춤 광고를 거부할 수 있습니다.</li>
      </ul>
      <h2 class="text-2xl font-semibold mt-6 mb-2">■ 쿠키의 저장 거부 방법</h2>
      <p class="mb-4">사용자는 브라우저 설정을 통해 쿠키 저장을 거부하거나 삭제할 수 있습니다. 단, 쿠키 저장을 거부할 경우 맞춤형 서비스 이용에 일부 제한이 있을 수 있습니다.</p>
      <h2 class="text-2xl font-semibold mt-6 mb-2">■ 개인정보의 제3자 제공</h2>
      <p class="mb-4">본 사이트는 법령에 따른 경우를 제외하고, 사용자의 동의 없이 개인정보를 제3자에게 제공하지 않습니다. 단, Google AdSense 등 광고 제공자는 자체적인 개인정보 보호정책에 따라 정보를 처리할 수 있습니다.</p>
      <h2 class="text-2xl font-semibold mt-6 mb-2">■ 이용자의 권리</h2>
      <ul class="list-disc pl-6 mb-4">
        <li>쿠키 저장 거부 및 삭제</li>
        <li>맞춤 광고 거부</li>
        <li>개인정보 열람, 정정, 삭제 요청(이메일 문의)</li>
      </ul>
      <h2 class="text-2xl font-semibold mt-6 mb-2">■ 문의처</h2>
      <p class="mb-2">개인정보처리방침에 대한 문의는 아래 이메일로 연락해 주세요.</p>
      <p class="font-medium">이메일: <a href="mailto:odk0425@naver.com" class="text-blue-600 underline">odk0425@naver.com</a></p>
      <p class="text-sm text-gray-500 mt-8">최종 수정일: 2025년 7월 1일</p>
    </div>
  </div>
  <script>
    // 급수별 월급 데이터 (google60cae4bef7e613f8.html에서 복사)
    const salaryTable = {
      1: [4498600, 4656300, 4818000, 4983300, 5152700, 5324100, 5498000, 5673300, 5851300, 6030200, 6208700, 6393300, 6578900, 6765000, 6927600, 7072100, 7200100, 7314100, 7416200, 7507800, 7592100, 7667200, 7730800],
      2: [4049900, 4200100, 4352400, 4506000, 4661900, 4817900, 4976000, 5133900, 5292900, 5451700, 5611300, 5776400, 5942500, 6092900, 6231500, 6358500, 6475400, 6582300, 6681100, 6771100, 6853500, 6929100, 6998200, 7054800, 7108800],
      3: [3653800, 3789000, 3928200, 4068400, 4210900, 4354800, 4500500, 4646400, 4793600, 4940700, 5088100, 5240800, 5382800, 5514600, 5636100, 5749300, 5854500, 5952400, 6042800, 6127600, 6206100, 6278700, 6345700, 6408500, 6459700, 6508900, 6554400],
      4: [3131600, 3259400, 3389400, 3522400, 3657200, 3793400, 3930700, 4068700, 4207200, 4345600, 4485100, 4616500, 4739200, 4853900, 4961800, 5063700, 5158200, 5246500, 5329000, 5406100, 5478100, 5545600, 5609100, 5668900, 5723500, 5769900, 5812500, 5853400],
      5: [2798500, 2911500, 3029000, 3151000, 3276200, 3403900, 3533600, 3664900, 3796700, 3929300, 4053400, 4172900, 4286400, 4392200, 4492200, 4586300, 4674800, 4758300, 4837000, 4910800, 4980200, 5045400, 5106900, 5164400, 5218800, 5270000, 5312500, 5353300],
      6: [2308700, 2416100, 2526800, 2640000, 2756600, 2876400, 2996600, 3117100, 3238000, 3351400, 3458900, 3564800, 3664400, 3758500, 3848900, 3933600, 4014400, 4090900, 4163400, 4231500, 4297200, 4358900, 4416700, 4472000, 4524400, 4574000, 4621100, 4660600, 4697500, 4734100, 4767900, 4799800],
      7: [2173600, 2237100, 2307500, 2385500, 2480300, 2591900, 2704100, 2817200, 2924700, 3027300, 3124100, 3219200, 3309500, 3395700, 3478200, 3556100, 3631000, 3702500, 3770000, 3834200, 3895500, 3953200, 4009300, 4062300, 4112600, 4160900, 4201600, 4239600, 4276400, 4311500, 4344400],
      8: [2028200, 2067600, 2109000, 2163100, 2228500, 2331700, 2434400, 2533700, 2628300, 2717900, 2804500, 2889200, 2970500, 3048400, 3123100, 3195300, 3262600, 3327800, 3390600, 3450300, 3507400, 3562200, 3614300, 3664600, 3712400, 3758700, 3797300, 3834500, 3869700, 3903700],
      9: [2000900, 2017000, 2039500, 2068300, 2104000, 2146800, 2197300, 2287400, 2373600, 2456700, 2535700, 2614400, 2689800, 2763100, 2833100, 2900800, 2967000, 3028500, 3089200, 3146900, 3201400, 3253700, 3303600, 3351500, 3397100, 3438400, 3474000, 3508200, 3541200, 3573300, 3604900]
    };
    const positionBonus = { 1: 750000, 2: 650000, 3: 500000, 4: 400000, 5: 250000, 6: 185000, 7: 180000, 8: 175000, 9: 175000 };
    const overtimePayRate = { 5: 15510, 6: 13229, 7: 11950, 8: 10729, 9: 10579 };
    const mealAllowance = 140000 * 12;
    // 실질 연봉 계산 함수 (5급 출신 기준, 연봉 계산기와 동일)
    function calcRealSalary(grade, step) {
      const monthly = salaryTable[grade][step-1] || 0;
      // 5급 출신 기준 근속연수
      const years = step + (5 - grade);
      // 기본연봉
      const yearlyBase = monthly * 12;
      // 직급보조비
      const position = (positionBonus[grade] || 0) * 12;
      // 급식비
      const meal = mealAllowance;
      // 명절휴가비
      const holidayBonus = monthly * 1.2;
      // 정근수당 (새 기준)
      let seniority = 0;
      if (years < 2) seniority = monthly * 0.2;
      else if (years < 5) seniority = monthly * 0.4;
      else if (years < 6) seniority = monthly * 0.5;
      else if (years < 7) seniority = monthly * 0.6;
      else if (years < 8) seniority = monthly * 0.7;
      else if (years < 9) seniority = monthly * 0.8;
      else if (years < 10) seniority = monthly * 0.9;
      else seniority = monthly * 1;
      // 복지포인트 (연봉 계산기와 동일)
      const welfare = 400000 + Math.min(years, 30) * 10000 - 10000;
      // 관리업무수당 (4급 이하만)
      const management = grade <= 4 ? monthly * 0.09 * 12 : 0;
      // 초과근무수당 (5~9급만, 10시간)
      const overtime = (grade >= 5 && grade <= 9 && overtimePayRate[grade]) ? overtimePayRate[grade] * 10 * 12 : 0;
      // 가족수당, 대우공무원수당, 성과급 등은 0으로 가정
      return yearlyBase + position + meal + holidayBonus + seniority + welfare + management + overtime;
    }
    // 급수별 실질 연봉 계산 (10, 15, 20호봉)
    const grades = [1,2,3,4,5];
    const steps = [10, 15, 20];
    const salaryData = grades.map(grade => steps.map(step => calcRealSalary(grade, step)));
    // 표 렌더링
    const tbody = document.getElementById('salary-table-body');
    grades.forEach((grade, i) => {
      const row = document.createElement('tr');
      row.innerHTML = `
        <td class="px-4 py-2 font-bold">${grade}급</td>
        <td class="px-4 py-2">${salaryData[i][0].toLocaleString()}원</td>
        <td class="px-4 py-2">${salaryData[i][1].toLocaleString()}원</td>
        <td class="px-4 py-2">${salaryData[i][2].toLocaleString()}원</td>
      `;
      tbody.appendChild(row);
    });
    // 차트 데이터
    const chartData = {
      labels: grades.map(g => g + '급'),
      datasets: [
        {
          label: '10호봉',
          data: salaryData.map(d => Math.round(d[0]/10000)),
          backgroundColor: 'rgba(59,130,246,0.7)'
        },
        {
          label: '15호봉',
          data: salaryData.map(d => Math.round(d[1]/10000)),
          backgroundColor: 'rgba(16,185,129,0.7)'
        },
        {
          label: '20호봉',
          data: salaryData.map(d => Math.round(d[2]/10000)),
          backgroundColor: 'rgba(234,179,8,0.7)'
        }
      ]
    };
    // 차트 렌더링
    new Chart(document.getElementById('salaryChart').getContext('2d'), {
      type: 'bar',
      data: chartData,
      options: {
        responsive: true,
        plugins: {
          legend: { position: 'top' },
          title: { display: false }
        },
        scales: {
          y: {
            title: { display: true, text: '연봉(만원)' },
            beginAtZero: true
          }
        }
      }
    });
    // 개인정보처리방침 모달 스크립트
    const privacyBtn = document.getElementById('privacyBtn');
    const privacyModal = document.getElementById('privacyModal');
    const closeModal = document.getElementById('closeModal');
    privacyBtn.onclick = () => privacyModal.classList.remove('hidden');
    closeModal.onclick = () => privacyModal.classList.add('hidden');
    privacyModal.onclick = (e) => {
      if (e.target === privacyModal) privacyModal.classList.add('hidden');
    };
  </script>
</body>
</html> 
